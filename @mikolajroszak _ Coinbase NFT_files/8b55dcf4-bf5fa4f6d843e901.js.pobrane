"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5920],{97306:function(e,t,n){n.d(t,{VG:function(){return $},Cz:function(){return Ee}});var a=n(2177),r=n(25877),i=n(6731),p=n(82468),s=n(28401),y=n(77294),u=n(84622),o=n(63144),l=n.n(o);function d(e,t,n,a,r,i,p){try{var s=e[i](p),y=s.value}catch(u){return void n(u)}s.done?t(y):Promise.resolve(y).then(a,r)}function m(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function p(e){d(i,a,r,p,s,"next",e)}function s(e){d(i,a,r,p,s,"throw",e)}p(void 0)}))}}function T(){return T=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},T.apply(this,arguments)}function c(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,k(e,t)}function b(e){return b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},b(e)}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function f(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function A(e,t,n){return A=f()?Reflect.construct:function(e,t,n){var a=[null];a.push.apply(a,t);var r=new(Function.bind.apply(e,a));return n&&k(r,n.prototype),r},A.apply(null,arguments)}function E(e){var t="function"===typeof Map?new Map:void 0;return E=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!==typeof e)throw new TypeError("Super expression must either be null or a function");if("undefined"!==typeof t){if(t.has(e))return t.get(e);t.set(e,a)}function a(){return A(e,arguments,b(this).constructor)}return a.prototype=Object.create(e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),k(a,e)},E(e)}var O,g,F,R,v,x=(O=function(e){var t=function(e){var t,n=Object.prototype,a=n.hasOwnProperty,r="function"===typeof Symbol?Symbol:{},i=r.iterator||"@@iterator",p=r.asyncIterator||"@@asyncIterator",s=r.toStringTag||"@@toStringTag";function y(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{y({},"")}catch(C){y=function(e,t,n){return e[t]=n}}function u(e,t,n,a){var r=t&&t.prototype instanceof b?t:b,i=Object.create(r.prototype),p=new h(a||[]);return i._invoke=function(e,t,n){var a=l;return function(r,i){if(a===m)throw new Error("Generator is already running");if(a===T){if("throw"===r)throw i;return L()}for(n.method=r,n.arg=i;;){var p=n.delegate;if(p){var s=v(p,n);if(s){if(s===c)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(a===l)throw a=T,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a=m;var y=o(e,t,n);if("normal"===y.type){if(a=n.done?T:d,y.arg===c)continue;return{value:y.arg,done:n.done}}"throw"===y.type&&(a=T,n.method="throw",n.arg=y.arg)}}}(e,n,p),i}function o(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(C){return{type:"throw",arg:C}}}e.wrap=u;var l="suspendedStart",d="suspendedYield",m="executing",T="completed",c={};function b(){}function k(){}function f(){}var A={};y(A,i,(function(){return this}));var E=Object.getPrototypeOf,O=E&&E(E(S([])));O&&O!==n&&a.call(O,i)&&(A=O);var g=f.prototype=b.prototype=Object.create(A);function F(e){["next","throw","return"].forEach((function(t){y(e,t,(function(e){return this._invoke(t,e)}))}))}function R(e,t){function n(r,i,p,s){var y=o(e[r],e,i);if("throw"!==y.type){var u=y.arg,l=u.value;return l&&"object"===typeof l&&a.call(l,"__await")?t.resolve(l.__await).then((function(e){n("next",e,p,s)}),(function(e){n("throw",e,p,s)})):t.resolve(l).then((function(e){u.value=e,p(u)}),(function(e){return n("throw",e,p,s)}))}s(y.arg)}var r;this._invoke=function(e,a){function i(){return new t((function(t,r){n(e,a,t,r)}))}return r=r?r.then(i,i):i()}}function v(e,n){var a=e.iterator[n.method];if(a===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,v(e,n),"throw"===n.method))return c;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return c}var r=o(a,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,c;var i=r.arg;return i?i.done?(n[e.resultName]=i.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,c):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,c)}function x(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function I(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function h(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(x,this),this.reset(!0)}function S(e){if(e){var n=e[i];if(n)return n.call(e);if("function"===typeof e.next)return e;if(!isNaN(e.length)){var r=-1,p=function n(){for(;++r<e.length;)if(a.call(e,r))return n.value=e[r],n.done=!1,n;return n.value=t,n.done=!0,n};return p.next=p}}return{next:L}}function L(){return{value:t,done:!0}}return k.prototype=f,y(g,"constructor",f),y(f,"constructor",k),k.displayName=y(f,s,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"===typeof e&&e.constructor;return!!t&&(t===k||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,f):(e.__proto__=f,y(e,s,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},F(R.prototype),y(R.prototype,p,(function(){return this})),e.AsyncIterator=R,e.async=function(t,n,a,r,i){void 0===i&&(i=Promise);var p=new R(u(t,n,a,r),i);return e.isGeneratorFunction(n)?p:p.next().then((function(e){return e.done?e.value:p.next()}))},F(g),y(g,s,"Generator"),y(g,i,(function(){return this})),y(g,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var a=t.pop();if(a in e)return n.value=a,n.done=!1,n}return n.done=!0,n}},e.values=S,h.prototype={constructor:h,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(I),!e)for(var n in this)"t"===n.charAt(0)&&a.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function r(a,r){return s.type="throw",s.arg=e,n.next=a,r&&(n.method="next",n.arg=t),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var p=this.tryEntries[i],s=p.completion;if("root"===p.tryLoc)return r("end");if(p.tryLoc<=this.prev){var y=a.call(p,"catchLoc"),u=a.call(p,"finallyLoc");if(y&&u){if(this.prev<p.catchLoc)return r(p.catchLoc,!0);if(this.prev<p.finallyLoc)return r(p.finallyLoc)}else if(y){if(this.prev<p.catchLoc)return r(p.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<p.finallyLoc)return r(p.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&a.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var p=i?i.completion:{};return p.type=e,p.arg=t,i?(this.method="next",this.next=i.finallyLoc,c):this.complete(p)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),c},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),I(n),c}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var r=a.arg;I(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,a){return this.delegate={iterator:S(e),resultName:n,nextLoc:a},"next"===this.method&&(this.arg=t),c}},e}(e.exports);try{regeneratorRuntime=t}catch(n){"object"===typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}},O(g={exports:{}},g.exports),g.exports),I=i.O$.from(0),h="0x0000000000000000000000000000000000000000";!function(e){e.ERC20="0xf47261b0",e.ERC721="0x02571792",e.MultiAsset="0x94cfcdd7",e.ERC1155="0xa7cb5fb7",e.StaticCall="0xc339d10a",e.ERC20Bridge="0xdc1600f3"}(F||(F={})),function(e){e[e.Mainnet=1]="Mainnet",e[e.Ropsten=3]="Ropsten",e[e.Rinkeby=4]="Rinkeby",e[e.Kovan=42]="Kovan",e[e.Ganache=1337]="Ganache",e[e.BSC=56]="BSC",e[e.Polygon=137]="Polygon",e[e.PolygonMumbai=80001]="PolygonMumbai",e[e.Avalanche=43114]="Avalanche"}(R||(R={})),function(e){e[e.Invalid=0]="Invalid",e[e.InvalidMakerAssetAmount=1]="InvalidMakerAssetAmount",e[e.InvalidTakerAssetAmount=2]="InvalidTakerAssetAmount",e[e.Fillable=3]="Fillable",e[e.Expired=4]="Expired",e[e.FullyFilled=5]="FullyFilled",e[e.Cancelled=6]="Cancelled"}(v||(v={}));var S,L;!function(e){e.MISSING_CONTRACT_WRAPPERS_ERROR="MISSING_CONTRACT_WRAPPERS_ERROR"}(S||(S={})),function(e){e.ERC20="ERC20",e.ERC721="ERC721",e.ERC1155="ERC1155"}(L||(L={}));var C;!function(e){e.OrderUnfillable="ORDER_UNFILLABLE",e.InvalidMaker="INVALID_MAKER",e.InvalidTaker="INVALID_TAKER",e.InvalidSender="INVALID_SENDER",e.InvalidOrderSignature="INVALID_ORDER_SIGNATURE",e.InvalidTakerAmount="INVALID_TAKER_AMOUNT",e.DivisionByZero="DIVISION_BY_ZERO",e.RoundingError="ROUNDING_ERROR",e.InvalidSignature="INVALID_SIGNATURE",e.SignatureIllegal="SIGNATURE_ILLEGAL",e.SignatureInvalid="SIGNATURE_INVALID",e.SignatureUnsupported="SIGNATURE_UNSUPPORTED",e.TakerOverpay="TAKER_OVERPAY",e.OrderOverfill="ORDER_OVERFILL",e.InvalidFillPrice="INVALID_FILL_PRICE",e.InvalidNewOrderEpoch="INVALID_NEW_ORDER_EPOCH",e.CompleteFillFailed="COMPLETE_FILL_FAILED",e.NegativeSpreadRequired="NEGATIVE_SPREAD_REQUIRED",e.ReentrancyIllegal="REENTRANCY_ILLEGAL",e.InvalidTxHash="INVALID_TX_HASH",e.InvalidTxSignature="INVALID_TX_SIGNATURE",e.FailedExecution="FAILED_EXECUTION",e.LengthGreaterThan0Required="LENGTH_GREATER_THAN_0_REQUIRED",e.LengthGreaterThan3Required="LENGTH_GREATER_THAN_3_REQUIRED",e.LengthGreaterThan131Required="LENGTH_GREATER_THAN_131_REQUIRED",e.Length0Required="LENGTH_0_REQUIRED",e.Length65Required="LENGTH_65_REQUIRED",e.InvalidAmount="INVALID_AMOUNT",e.TransferFailed="TRANSFER_FAILED",e.SenderNotAuthorized="SENDER_NOT_AUTHORIZED",e.TargetNotAuthorized="TARGET_NOT_AUTHORIZED",e.TargetAlreadyAuthorized="TARGET_ALREADY_AUTHORIZED",e.IndexOutOfBounds="INDEX_OUT_OF_BOUNDS",e.AuthorizedAddressMismatch="AUTHORIZED_ADDRESS_MISMATCH",e.OnlyContractOwner="ONLY_CONTRACT_OWNER",e.MakerNotWhitelisted="MAKER_NOT_WHITELISTED",e.TakerNotWhitelisted="TAKER_NOT_WHITELISTED",e.AssetProxyDoesNotExist="ASSET_PROXY_DOES_NOT_EXIST",e.LengthMismatch="LENGTH_MISMATCH",e.LibBytesGreaterThanZeroLengthRequired="GREATER_THAN_ZERO_LENGTH_REQUIRED",e.LibBytesGreaterOrEqualTo4LengthRequired="GREATER_OR_EQUAL_TO_4_LENGTH_REQUIRED",e.LibBytesGreaterOrEqualTo20LengthRequired="GREATER_OR_EQUAL_TO_20_LENGTH_REQUIRED",e.LibBytesGreaterOrEqualTo32LengthRequired="GREATER_OR_EQUAL_TO_32_LENGTH_REQUIRED",e.LibBytesGreaterOrEqualToNestedBytesLengthRequired="GREATER_OR_EQUAL_TO_NESTED_BYTES_LENGTH_REQUIRED",e.LibBytesGreaterOrEqualToSourceBytesLengthRequired="GREATER_OR_EQUAL_TO_SOURCE_BYTES_LENGTH_REQUIRED",e.Erc20InsufficientBalance="ERC20_INSUFFICIENT_BALANCE",e.Erc20InsufficientAllowance="ERC20_INSUFFICIENT_ALLOWANCE",e.FeePercentageTooLarge="FEE_PERCENTAGE_TOO_LARGE",e.ValueGreaterThanZero="VALUE_GREATER_THAN_ZERO",e.InvalidMsgValue="INVALID_MSG_VALUE",e.InsufficientEthRemaining="INSUFFICIENT_ETH_REMAINING",e.Uint256Overflow="UINT256_OVERFLOW",e.Erc721ZeroToAddress="ERC721_ZERO_TO_ADDRESS",e.Erc721OwnerMismatch="ERC721_OWNER_MISMATCH",e.Erc721InvalidSpender="ERC721_INVALID_SPENDER",e.Erc721ZeroOwner="ERC721_ZERO_OWNER",e.Erc721InvalidSelector="ERC721_INVALID_SELECTOR",e.WalletError="WALLET_ERROR",e.ValidatorError="VALIDATOR_ERROR",e.InvalidFunctionSelector="INVALID_FUNCTION_SELECTOR",e.InvalidAssetData="INVALID_ASSET_DATA",e.InvalidAssetProxy="INVALID_ASSET_PROXY",e.UnregisteredAssetProxy="UNREGISTERED_ASSET_PROXY",e.TxFullyConfirmed="TX_FULLY_CONFIRMED",e.TxNotFullyConfirmed="TX_NOT_FULLY_CONFIRMED",e.TimeLockIncomplete="TIME_LOCK_INCOMPLETE",e.InvalidFreeMemoryPtr="INVALID_FREE_MEMORY_PTR",e.AuctionInvalidAmount="INVALID_AMOUNT",e.AuctionExpired="AUCTION_EXPIRED",e.AuctionNotStarted="AUCTION_NOT_STARTED",e.AuctionInvalidBeginTime="INVALID_BEGIN_TIME",e.InvalidAssetDataEnd="INVALID_ASSET_DATA_END",e.InvalidOrBlockedExchangeSelector="INVALID_OR_BLOCKED_EXCHANGE_SELECTOR",e.BalanceQueryFailed="BALANCE_QUERY_FAILED",e.AtLeastOneAddressDoesNotMeetBalanceThreshold="AT_LEAST_ONE_ADDRESS_DOES_NOT_MEET_BALANCE_THRESHOLD",e.FromLessThanToRequired="FROM_LESS_THAN_TO_REQUIRED",e.ToLessThanLengthRequired="TO_LESS_THAN_LENGTH_REQUIRED",e.InvalidApprovalSignature="INVALID_APPROVAL_SIGNATURE",e.ApprovalExpired="APPROVAL_EXPIRED",e.InvalidOrigin="INVALID_ORIGIN",e.AmountEqualToOneRequired="AMOUNT_EQUAL_TO_ONE_REQUIRED",e.BadReceiverReturnValue="BAD_RECEIVER_RETURN_VALUE",e.CannotTransferToAddressZero="CANNOT_TRANSFER_TO_ADDRESS_ZERO",e.InsufficientAllowance="INSUFFICIENT_ALLOWANCE",e.NFTNotOwnedByFromAddress="NFT_NOT_OWNED_BY_FROM_ADDRESS",e.OwnersAndIdsMustHaveSameLength="OWNERS_AND_IDS_MUST_HAVE_SAME_LENGTH",e.TokenAndValuesLengthMismatch="TOKEN_AND_VALUES_LENGTH_MISMATCH",e.TransferRejected="TRANSFER_REJECTED",e.Uint256Underflow="UINT256_UNDERFLOW",e.InvalidIdsOffset="INVALID_IDS_OFFSET",e.InvalidValuesOffset="INVALID_VALUES_OFFSET",e.InvalidDataOffset="INVALID_DATA_OFFSET",e.InvalidAssetDataLength="INVALID_ASSET_DATA_LENGTH",e.InvalidStaticCallDataOffset="INVALID_STATIC_CALL_DATA_OFFSET",e.TargetNotEven="TARGET_NOT_EVEN",e.UnexpectedStaticCallResult="UNEXPECTED_STATIC_CALL_RESULT",e.TransfersSuccessful="TRANSFERS_SUCCESSFUL",e.InsufficientFunds="INSUFFICIENT_FUNDS",e.TxAlreadyExecuted="TX_ALREADY_EXECUTED",e.DefaultTimeLockIncomplete="DEFAULT_TIME_LOCK_INCOMPLETE",e.CustomTimeLockIncomplete="CUSTOM_TIME_LOCK_INCOMPLETE",e.EqualLengthsRequired="EQUAL_LENGTHS_REQUIRED",e.OnlyCallableByWallet="ONLY_CALLABLE_BY_WALLET"}(C||(C={}));var N=function(e){function t(t,n){var a;return a=e.call(this,t||"")||this,"object"===typeof n&&null!==n&&(n.code&&(a.code=String(n.code)),n.expected&&(a.expected=!0),n.transient&&(a.transient=!0),n.cause&&(a.cause=n.cause)),Error.captureStackTrace&&Error.captureStackTrace(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(a),a.constructor),a}return c(t,e),t}(E(Error)),w=function(e){function t(t){var n,a="UnexpectedAssetTypeError";return(n=e.call(this,"Unexpected asset type "+(null!=t?t:"unknown"),{expected:!0,code:a})||this).name=a,n}return c(t,e),t}(N),D=[{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes4",name:"id",type:"bytes4"},{indexed:!1,internalType:"address",name:"assetProxy",type:"address"}],name:"AssetProxyRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"makerAddress",type:"address"},{indexed:!0,internalType:"address",name:"feeRecipientAddress",type:"address"},{indexed:!1,internalType:"bytes",name:"makerAssetData",type:"bytes"},{indexed:!1,internalType:"bytes",name:"takerAssetData",type:"bytes"},{indexed:!1,internalType:"address",name:"senderAddress",type:"address"},{indexed:!0,internalType:"bytes32",name:"orderHash",type:"bytes32"}],name:"Cancel",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"makerAddress",type:"address"},{indexed:!0,internalType:"address",name:"orderSenderAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"orderEpoch",type:"uint256"}],name:"CancelUpTo",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"makerAddress",type:"address"},{indexed:!0,internalType:"address",name:"feeRecipientAddress",type:"address"},{indexed:!1,internalType:"bytes",name:"makerAssetData",type:"bytes"},{indexed:!1,internalType:"bytes",name:"takerAssetData",type:"bytes"},{indexed:!1,internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{indexed:!1,internalType:"bytes",name:"takerFeeAssetData",type:"bytes"},{indexed:!0,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:!1,internalType:"address",name:"takerAddress",type:"address"},{indexed:!1,internalType:"address",name:"senderAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"makerFeePaid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"takerFeePaid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],name:"Fill",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldProtocolFeeCollector",type:"address"},{indexed:!1,internalType:"address",name:"updatedProtocolFeeCollector",type:"address"}],name:"ProtocolFeeCollectorAddress",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldProtocolFeeMultiplier",type:"uint256"},{indexed:!1,internalType:"uint256",name:"updatedProtocolFeeMultiplier",type:"uint256"}],name:"ProtocolFeeMultiplier",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signerAddress",type:"address"},{indexed:!0,internalType:"address",name:"validatorAddress",type:"address"},{indexed:!1,internalType:"bool",name:"isApproved",type:"bool"}],name:"SignatureValidatorApproval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"transactionHash",type:"bytes32"}],name:"TransactionExecution",type:"event"},{constant:!0,inputs:[],name:"EIP1271_MAGIC_VALUE",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"EIP712_EXCHANGE_DOMAIN_HASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowedValidators",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"}],name:"batchCancelOrders",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"gasPrice",type:"uint256"},{internalType:"address",name:"signerAddress",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct LibZeroExTransaction.ZeroExTransaction[]",name:"transactions",type:"tuple[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"batchExecuteTransactions",outputs:[{internalType:"bytes[]",name:"",type:"bytes[]"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256[]",name:"takerAssetFillAmounts",type:"uint256[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"batchFillOrKillOrders",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"fillResults",type:"tuple[]"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256[]",name:"takerAssetFillAmounts",type:"uint256[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"batchFillOrders",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"fillResults",type:"tuple[]"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256[]",name:"takerAssetFillAmounts",type:"uint256[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"batchFillOrdersNoThrow",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"fillResults",type:"tuple[]"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"leftOrders",type:"tuple[]"},{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"rightOrders",type:"tuple[]"},{internalType:"bytes[]",name:"leftSignatures",type:"bytes[]"},{internalType:"bytes[]",name:"rightSignatures",type:"bytes[]"}],name:"batchMatchOrders",outputs:[{components:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"left",type:"tuple[]"},{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"right",type:"tuple[]"},{internalType:"uint256",name:"profitInLeftMakerAsset",type:"uint256"},{internalType:"uint256",name:"profitInRightMakerAsset",type:"uint256"}],internalType:"struct LibFillResults.BatchMatchedFillResults",name:"batchMatchedFillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"leftOrders",type:"tuple[]"},{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"rightOrders",type:"tuple[]"},{internalType:"bytes[]",name:"leftSignatures",type:"bytes[]"},{internalType:"bytes[]",name:"rightSignatures",type:"bytes[]"}],name:"batchMatchOrdersWithMaximalFill",outputs:[{components:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"left",type:"tuple[]"},{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"right",type:"tuple[]"},{internalType:"uint256",name:"profitInLeftMakerAsset",type:"uint256"},{internalType:"uint256",name:"profitInRightMakerAsset",type:"uint256"}],internalType:"struct LibFillResults.BatchMatchedFillResults",name:"batchMatchedFillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"order",type:"tuple"}],name:"cancelOrder",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"uint256",name:"targetOrderEpoch",type:"uint256"}],name:"cancelOrdersUpTo",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"cancelled",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"currentContextAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"detachProtocolFeeCollector",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"gasPrice",type:"uint256"},{internalType:"address",name:"signerAddress",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct LibZeroExTransaction.ZeroExTransaction",name:"transaction",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"order",type:"tuple"},{internalType:"uint256",name:"takerAssetFillAmount",type:"uint256"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"fillOrKillOrder",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"order",type:"tuple"},{internalType:"uint256",name:"takerAssetFillAmount",type:"uint256"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"fillOrder",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"filled",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"bytes4",name:"assetProxyId",type:"bytes4"}],name:"getAssetProxy",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"order",type:"tuple"}],name:"getOrderInfo",outputs:[{components:[{internalType:"uint8",name:"orderStatus",type:"uint8"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint256",name:"orderTakerAssetFilledAmount",type:"uint256"}],internalType:"struct LibOrder.OrderInfo",name:"orderInfo",type:"tuple"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"},{internalType:"address",name:"signerAddress",type:"address"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"isValidHashSignature",outputs:[{internalType:"bool",name:"isValid",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"order",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"isValidOrderSignature",outputs:[{internalType:"bool",name:"isValid",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"gasPrice",type:"uint256"},{internalType:"address",name:"signerAddress",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct LibZeroExTransaction.ZeroExTransaction",name:"transaction",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"isValidTransactionSignature",outputs:[{internalType:"bool",name:"isValid",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"makerAssetFillAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"marketBuyOrdersFillOrKill",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"makerAssetFillAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"marketBuyOrdersNoThrow",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"takerAssetFillAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"marketSellOrdersFillOrKill",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"takerAssetFillAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"marketSellOrdersNoThrow",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"leftOrder",type:"tuple"},{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"rightOrder",type:"tuple"},{internalType:"bytes",name:"leftSignature",type:"bytes"},{internalType:"bytes",name:"rightSignature",type:"bytes"}],name:"matchOrders",outputs:[{components:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"left",type:"tuple"},{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"right",type:"tuple"},{internalType:"uint256",name:"profitInLeftMakerAsset",type:"uint256"},{internalType:"uint256",name:"profitInRightMakerAsset",type:"uint256"}],internalType:"struct LibFillResults.MatchedFillResults",name:"matchedFillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"leftOrder",type:"tuple"},{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"rightOrder",type:"tuple"},{internalType:"bytes",name:"leftSignature",type:"bytes"},{internalType:"bytes",name:"rightSignature",type:"bytes"}],name:"matchOrdersWithMaximalFill",outputs:[{components:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"left",type:"tuple"},{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"right",type:"tuple"},{internalType:"uint256",name:"profitInLeftMakerAsset",type:"uint256"},{internalType:"uint256",name:"profitInRightMakerAsset",type:"uint256"}],internalType:"struct LibFillResults.MatchedFillResults",name:"matchedFillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"orderEpoch",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],name:"preSign",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"preSigned",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"protocolFeeCollector",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"protocolFeeMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"assetProxy",type:"address"}],name:"registerAssetProxy",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"updatedProtocolFeeCollector",type:"address"}],name:"setProtocolFeeCollectorAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"uint256",name:"updatedProtocolFeeMultiplier",type:"uint256"}],name:"setProtocolFeeMultiplier",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"validatorAddress",type:"address"},{internalType:"bool",name:"approval",type:"bool"}],name:"setSignatureValidatorApproval",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"bytes[]",name:"assetData",type:"bytes[]"},{internalType:"address[]",name:"fromAddresses",type:"address[]"},{internalType:"address[]",name:"toAddresses",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],name:"simulateDispatchTransferFromCalls",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"transactionsExecuted",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}],_=function(){function e(){}return e.createInterface=function(){return new p.vU(D)},e.connect=function(e,t){return new y.CH(e,D,t)},e}();_.abi=D;var M=[{inputs:[{internalType:"address",name:"_exchange",type:"address"},{internalType:"address",name:"_exchangeV2",type:"address"},{internalType:"address",name:"_weth",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{payable:!0,stateMutability:"payable",type:"fallback"},{constant:!0,inputs:[],name:"ERC1155_BATCH_RECEIVED",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"ERC1155_RECEIVED",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"EXCHANGE_V2_ORDER_ID",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"bytes",name:"assetData",type:"bytes"}],name:"approveMakerAssetProxy",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"makerAssetBuyAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"},{internalType:"uint256[]",name:"ethFeeAmounts",type:"uint256[]"},{internalType:"address payable[]",name:"feeRecipients",type:"address[]"}],name:"marketBuyOrdersWithEth",outputs:[{internalType:"uint256",name:"wethSpentAmount",type:"uint256"},{internalType:"uint256",name:"makerAssetAcquiredAmount",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"ethSellAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"},{internalType:"uint256[]",name:"ethFeeAmounts",type:"uint256[]"},{internalType:"address payable[]",name:"feeRecipients",type:"address[]"}],name:"marketSellAmountWithEth",outputs:[{internalType:"uint256",name:"wethSpentAmount",type:"uint256"},{internalType:"uint256",name:"makerAssetAcquiredAmount",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"},{internalType:"uint256[]",name:"ethFeeAmounts",type:"uint256[]"},{internalType:"address payable[]",name:"feeRecipients",type:"address[]"}],name:"marketSellOrdersWithEth",outputs:[{internalType:"uint256",name:"wethSpentAmount",type:"uint256"},{internalType:"uint256",name:"makerAssetAcquiredAmount",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"onERC1155BatchReceived",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"onERC1155Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"bytes",name:"assetData",type:"bytes"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawAsset",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}],P=function(){function e(){}return e.createInterface=function(){return new p.vU(M)},e.connect=function(e,t){return new y.CH(e,M,t)},e}();P.abi=M;var V=[{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"ERC1155OrderCancelled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc20FillAmount",type:"uint256"},{indexed:!1,internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{indexed:!1,internalType:"uint128",name:"erc1155FillAmount",type:"uint128"},{indexed:!1,internalType:"address",name:"matcher",type:"address"}],name:"ERC1155OrderFilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"uint256",name:"expiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],indexed:!1,internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{indexed:!1,internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],indexed:!1,internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{indexed:!1,internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],name:"ERC1155OrderPreSigned",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"ERC721OrderCancelled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{indexed:!1,internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc721TokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"matcher",type:"address"}],name:"ERC721OrderFilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"uint256",name:"expiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],indexed:!1,internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{indexed:!1,internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],indexed:!1,internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],name:"ERC721OrderPreSigned",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"address",name:"feeRecipient",type:"address"},{indexed:!1,internalType:"address",name:"makerToken",type:"address"},{indexed:!1,internalType:"address",name:"takerToken",type:"address"},{indexed:!1,internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{indexed:!1,internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"},{indexed:!1,internalType:"uint128",name:"takerTokenFeeFilledAmount",type:"uint128"},{indexed:!1,internalType:"uint256",name:"protocolFeePaid",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"pool",type:"bytes32"}],name:"LimitOrderFilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{indexed:!1,internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{indexed:!1,internalType:"uint256",name:"inputTokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"outputTokenAmount",type:"uint256"},{indexed:!1,internalType:"contract ILiquidityProvider",name:"provider",type:"address"},{indexed:!1,internalType:"address",name:"recipient",type:"address"}],name:"LiquidityProviderSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"hash",type:"bytes32"},{indexed:!0,internalType:"bytes4",name:"selector",type:"bytes4"},{indexed:!1,internalType:"address",name:"signer",type:"address"},{indexed:!1,internalType:"address",name:"sender",type:"address"}],name:"MetaTransactionExecuted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"migrator",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"Migrated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:!1,internalType:"address",name:"maker",type:"address"}],name:"OrderCancelled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"signer",type:"address"},{indexed:!1,internalType:"bool",name:"allowed",type:"bool"}],name:"OrderSignerRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"address",name:"makerToken",type:"address"},{indexed:!1,internalType:"address",name:"takerToken",type:"address"},{indexed:!1,internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"},{indexed:!1,internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],name:"OtcOrderFilled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"makerToken",type:"address"},{indexed:!1,internalType:"address",name:"takerToken",type:"address"},{indexed:!1,internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"PairCancelledLimitOrders",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"makerToken",type:"address"},{indexed:!1,internalType:"address",name:"takerToken",type:"address"},{indexed:!1,internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"PairCancelledRfqOrders",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes4",name:"selector",type:"bytes4"},{indexed:!1,internalType:"address",name:"oldImpl",type:"address"},{indexed:!1,internalType:"address",name:"newImpl",type:"address"}],name:"ProxyFunctionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"quoteSigner",type:"address"}],name:"QuoteSignerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"address",name:"makerToken",type:"address"},{indexed:!1,internalType:"address",name:"takerToken",type:"address"},{indexed:!1,internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{indexed:!1,internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"},{indexed:!1,internalType:"bytes32",name:"pool",type:"bytes32"}],name:"RfqOrderFilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"origin",type:"address"},{indexed:!1,internalType:"address[]",name:"addrs",type:"address[]"},{indexed:!1,internalType:"bool",name:"allowed",type:"bool"}],name:"RfqOrderOriginsAllowed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"address",name:"inputToken",type:"address"},{indexed:!1,internalType:"address",name:"outputToken",type:"address"},{indexed:!1,internalType:"uint256",name:"inputTokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"outputTokenAmount",type:"uint256"}],name:"TransformedERC20",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"transformerDeployer",type:"address"}],name:"TransformerDeployerUpdated",type:"event"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"}],name:"_fillLimitOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"},{internalType:"address",name:"taker",type:"address"},{internalType:"bool",name:"useSelfBalance",type:"bool"},{internalType:"address",name:"recipient",type:"address"}],name:"_fillOtcOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"},{internalType:"address",name:"taker",type:"address"},{internalType:"bool",name:"useSelfBalance",type:"bool"},{internalType:"address",name:"recipient",type:"address"}],name:"_fillRfqOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedPath",type:"bytes"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"_sellHeldTokenForTokenToUniswapV3",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address payable",name:"taker",type:"address"},{internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{internalType:"uint256",name:"inputTokenAmount",type:"uint256"},{internalType:"uint256",name:"minOutputTokenAmount",type:"uint256"},{components:[{internalType:"uint32",name:"deploymentNonce",type:"uint32"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct ITransformERC20Feature.Transformation[]",name:"transformations",type:"tuple[]"},{internalType:"bool",name:"useSelfBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct ITransformERC20Feature.TransformERC20Args",name:"args",type:"tuple"}],name:"_transformERC20",outputs:[{internalType:"uint256",name:"outputTokenAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order[]",name:"sellOrders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"},{internalType:"uint128[]",name:"erc1155TokenAmounts",type:"uint128[]"},{internalType:"bytes[]",name:"callbackData",type:"bytes[]"},{internalType:"bool",name:"revertIfIncomplete",type:"bool"}],name:"batchBuyERC1155s",outputs:[{internalType:"bool[]",name:"successes",type:"bool[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order[]",name:"sellOrders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"},{internalType:"bytes[]",name:"callbackData",type:"bytes[]"},{internalType:"bool",name:"revertIfIncomplete",type:"bool"}],name:"batchBuyERC721s",outputs:[{internalType:"bool[]",name:"successes",type:"bool[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256[]",name:"orderNonces",type:"uint256[]"}],name:"batchCancelERC1155Orders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"orderNonces",type:"uint256[]"}],name:"batchCancelERC721Orders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder[]",name:"orders",type:"tuple[]"}],name:"batchCancelLimitOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06[]",name:"makerTokens",type:"address[]"},{internalType:"contract IERC20TokenV06[]",name:"takerTokens",type:"address[]"},{internalType:"uint256[]",name:"minValidSalts",type:"uint256[]"}],name:"batchCancelPairLimitOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"contract IERC20TokenV06[]",name:"makerTokens",type:"address[]"},{internalType:"contract IERC20TokenV06[]",name:"takerTokens",type:"address[]"},{internalType:"uint256[]",name:"minValidSalts",type:"uint256[]"}],name:"batchCancelPairLimitOrdersWithSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06[]",name:"makerTokens",type:"address[]"},{internalType:"contract IERC20TokenV06[]",name:"takerTokens",type:"address[]"},{internalType:"uint256[]",name:"minValidSalts",type:"uint256[]"}],name:"batchCancelPairRfqOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"contract IERC20TokenV06[]",name:"makerTokens",type:"address[]"},{internalType:"contract IERC20TokenV06[]",name:"takerTokens",type:"address[]"},{internalType:"uint256[]",name:"minValidSalts",type:"uint256[]"}],name:"batchCancelPairRfqOrdersWithSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder[]",name:"orders",type:"tuple[]"}],name:"batchCancelRfqOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address payable",name:"signer",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"minGasPrice",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"feeToken",type:"address"},{internalType:"uint256",name:"feeAmount",type:"uint256"}],internalType:"struct IMetaTransactionsFeature.MetaTransactionData[]",name:"mtxs",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"}],name:"batchExecuteMetaTransactions",outputs:[{internalType:"bytes[]",name:"returnResults",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder[]",name:"orders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"},{internalType:"uint128[]",name:"takerTokenFillAmounts",type:"uint128[]"},{internalType:"bool",name:"revertIfIncomplete",type:"bool"}],name:"batchFillLimitOrders",outputs:[{internalType:"uint128[]",name:"takerTokenFilledAmounts",type:"uint128[]"},{internalType:"uint128[]",name:"makerTokenFilledAmounts",type:"uint128[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder[]",name:"orders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"},{internalType:"uint128[]",name:"takerTokenFillAmounts",type:"uint128[]"},{internalType:"bool",name:"revertIfIncomplete",type:"bool"}],name:"batchFillRfqOrders",outputs:[{internalType:"uint128[]",name:"takerTokenFilledAmounts",type:"uint128[]"},{internalType:"uint128[]",name:"makerTokenFilledAmounts",type:"uint128[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder[]",name:"orders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"makerSignatures",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"takerSignatures",type:"tuple[]"},{internalType:"bool[]",name:"unwrapWeth",type:"bool[]"}],name:"batchFillTakerSignedOtcOrders",outputs:[{internalType:"bool[]",name:"successes",type:"bool[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder[]",name:"orders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"}],name:"batchGetLimitOrderRelevantStates",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo[]",name:"orderInfos",type:"tuple[]"},{internalType:"uint128[]",name:"actualFillableTakerTokenAmounts",type:"uint128[]"},{internalType:"bool[]",name:"isSignatureValids",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder[]",name:"orders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"}],name:"batchGetRfqOrderRelevantStates",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo[]",name:"orderInfos",type:"tuple[]"},{internalType:"uint128[]",name:"actualFillableTakerTokenAmounts",type:"uint128[]"},{internalType:"bool[]",name:"isSignatureValids",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order[]",name:"sellOrders",type:"tuple[]"},{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order[]",name:"buyOrders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"sellOrderSignatures",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"buyOrderSignatures",type:"tuple[]"}],name:"batchMatchERC721Orders",outputs:[{internalType:"uint256[]",name:"profits",type:"uint256[]"},{internalType:"bool[]",name:"successes",type:"bool[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"sellOrder",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"erc1155BuyAmount",type:"uint128"},{internalType:"bytes",name:"callbackData",type:"bytes"}],name:"buyERC1155",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"sellOrder",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"bytes",name:"callbackData",type:"bytes"}],name:"buyERC721",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"orderNonce",type:"uint256"}],name:"cancelERC1155Order",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"orderNonce",type:"uint256"}],name:"cancelERC721Order",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"}],name:"cancelLimitOrder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"cancelPairLimitOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"cancelPairLimitOrdersWithSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"cancelPairRfqOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"cancelPairRfqOrdersWithSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"}],name:"cancelRfqOrder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"createTransformWallet",outputs:[{internalType:"contract IFlashWallet",name:"wallet",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address payable",name:"signer",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"minGasPrice",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"feeToken",type:"address"},{internalType:"uint256",name:"feeAmount",type:"uint256"}],internalType:"struct IMetaTransactionsFeature.MetaTransactionData",name:"mtx",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"}],name:"executeMetaTransaction",outputs:[{internalType:"bytes",name:"returnResult",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"address",name:"impl",type:"address"}],name:"extend",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillLimitOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillOrKillLimitOrder",outputs:[{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillOrKillRfqOrder",outputs:[{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillOtcOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillOtcOrderForEth",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"}],name:"fillOtcOrderWithEth",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillRfqOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"takerSignature",type:"tuple"}],name:"fillTakerSignedOtcOrder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"takerSignature",type:"tuple"}],name:"fillTakerSignedOtcOrderForEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"order",type:"tuple"}],name:"getERC1155OrderHash",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"order",type:"tuple"}],name:"getERC1155OrderInfo",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNFTOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"orderAmount",type:"uint128"},{internalType:"uint128",name:"remainingAmount",type:"uint128"}],internalType:"struct LibNFTOrder.OrderInfo",name:"orderInfo",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"}],name:"getERC721OrderHash",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"}],name:"getERC721OrderStatus",outputs:[{internalType:"enum LibNFTOrder.OrderStatus",name:"status",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"uint248",name:"nonceRange",type:"uint248"}],name:"getERC721OrderStatusBitVector",outputs:[{internalType:"uint256",name:"bitVector",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"}],name:"getLimitOrderHash",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"}],name:"getLimitOrderInfo",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo",name:"orderInfo",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"}],name:"getLimitOrderRelevantState",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo",name:"orderInfo",type:"tuple"},{internalType:"uint128",name:"actualFillableTakerTokenAmount",type:"uint128"},{internalType:"bool",name:"isSignatureValid",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address payable",name:"signer",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"minGasPrice",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"feeToken",type:"address"},{internalType:"uint256",name:"feeAmount",type:"uint256"}],internalType:"struct IMetaTransactionsFeature.MetaTransactionData",name:"mtx",type:"tuple"}],name:"getMetaTransactionExecutedBlock",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address payable",name:"signer",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"minGasPrice",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"feeToken",type:"address"},{internalType:"uint256",name:"feeAmount",type:"uint256"}],internalType:"struct IMetaTransactionsFeature.MetaTransactionData",name:"mtx",type:"tuple"}],name:"getMetaTransactionHash",outputs:[{internalType:"bytes32",name:"mtxHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"mtxHash",type:"bytes32"}],name:"getMetaTransactionHashExecutedBlock",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"}],name:"getOtcOrderHash",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"}],name:"getOtcOrderInfo",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"}],internalType:"struct LibNativeOrder.OtcOrderInfo",name:"orderInfo",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeeMultiplier",outputs:[{internalType:"uint32",name:"multiplier",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getQuoteSigner",outputs:[{internalType:"address",name:"signer",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"}],name:"getRfqOrderHash",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"}],name:"getRfqOrderInfo",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo",name:"orderInfo",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"}],name:"getRfqOrderRelevantState",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo",name:"orderInfo",type:"tuple"},{internalType:"uint128",name:"actualFillableTakerTokenAmount",type:"uint128"},{internalType:"bool",name:"isSignatureValid",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"uint256",name:"idx",type:"uint256"}],name:"getRollbackEntryAtIndex",outputs:[{internalType:"address",name:"impl",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getRollbackLength",outputs:[{internalType:"uint256",name:"rollbackLength",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTransformWallet",outputs:[{internalType:"contract IFlashWallet",name:"wallet",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTransformerDeployer",outputs:[{internalType:"address",name:"deployer",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"signer",type:"address"}],name:"isValidOrderSigner",outputs:[{internalType:"bool",name:"isAllowed",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint64",name:"nonceBucket",type:"uint64"}],name:"lastOtcTxOriginNonce",outputs:[{internalType:"uint128",name:"lastNonce",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"sellOrder",type:"tuple"},{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"buyOrder",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"sellOrderSignature",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"buyOrderSignature",type:"tuple"}],name:"matchERC721Orders",outputs:[{internalType:"uint256",name:"profit",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"address",name:"newOwner",type:"address"}],name:"migrate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.BatchSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexBatchSellEthForToken",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.BatchSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexBatchSellTokenForEth",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.BatchSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexBatchSellTokenForToken",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.MultiHopSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexMultiHopSellEthForToken",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.MultiHopSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexMultiHopSellTokenForEth",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.MultiHopSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexMultiHopSellTokenForToken",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"onERC1155Received",outputs:[{internalType:"bytes4",name:"success",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"onERC721Received",outputs:[{internalType:"bytes4",name:"success",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"ownerAddress",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"order",type:"tuple"}],name:"preSignERC1155Order",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"}],name:"preSignERC721Order",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"signer",type:"address"},{internalType:"bool",name:"allowed",type:"bool"}],name:"registerAllowedOrderSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"origins",type:"address[]"},{internalType:"bool",name:"allowed",type:"bool"}],name:"registerAllowedRfqOrigins",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"address",name:"targetImpl",type:"address"}],name:"rollback",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"buyOrder",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{internalType:"uint128",name:"erc1155SellAmount",type:"uint128"},{internalType:"bool",name:"unwrapNativeToken",type:"bool"},{internalType:"bytes",name:"callbackData",type:"bytes"}],name:"sellERC1155",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"buyOrder",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{internalType:"bool",name:"unwrapNativeToken",type:"bool"},{internalType:"bytes",name:"callbackData",type:"bytes"}],name:"sellERC721",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedPath",type:"bytes"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"sellEthForTokenToUniswapV3",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{internalType:"contract ILiquidityProvider",name:"provider",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"bytes",name:"auxiliaryData",type:"bytes"}],name:"sellToLiquidityProvider",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"enum IPancakeSwapFeature.ProtocolFork",name:"fork",type:"uint8"}],name:"sellToPancakeSwap",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"bool",name:"isSushi",type:"bool"}],name:"sellToUniswap",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedPath",type:"bytes"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"address payable",name:"recipient",type:"address"}],name:"sellTokenForEthToUniswapV3",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedPath",type:"bytes"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"sellTokenForTokenToUniswapV3",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"quoteSigner",type:"address"}],name:"setQuoteSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"transformerDeployer",type:"address"}],name:"setTransformerDeployer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportInterface",outputs:[{internalType:"bool",name:"isSupported",type:"bool"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"poolIds",type:"bytes32[]"}],name:"transferProtocolFeesForPools",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"erc20",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address payable",name:"recipientWallet",type:"address"}],name:"transferTrappedTokensTo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{internalType:"uint256",name:"inputTokenAmount",type:"uint256"},{internalType:"uint256",name:"minOutputTokenAmount",type:"uint256"},{components:[{internalType:"uint32",name:"deploymentNonce",type:"uint32"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct ITransformERC20Feature.Transformation[]",name:"transformations",type:"tuple[]"}],name:"transformERC20",outputs:[{internalType:"uint256",name:"outputTokenAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"int256",name:"amount0Delta",type:"int256"},{internalType:"int256",name:"amount1Delta",type:"int256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"uniswapV3SwapCallback",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"order",type:"tuple"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"}],name:"validateERC1155OrderProperties",outputs:[],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"}],name:"validateERC1155OrderSignature",outputs:[],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"}],name:"validateERC721OrderProperties",outputs:[],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"}],name:"validateERC721OrderSignature",outputs:[],stateMutability:"view",type:"function"}],U=function(){function e(){}return e.createInterface=function(){return new p.vU(V)},e.connect=function(e,t){return new y.CH(e,V,t)},e}();U.abi=V;var B=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_owner",type:"address"},{indexed:!0,internalType:"address",name:"_operator",type:"address"},{indexed:!1,internalType:"bool",name:"_approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_operator",type:"address"},{indexed:!0,internalType:"address",name:"_from",type:"address"},{indexed:!0,internalType:"address",name:"_to",type:"address"},{indexed:!1,internalType:"uint256[]",name:"_ids",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"_amounts",type:"uint256[]"}],name:"TransferBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_operator",type:"address"},{indexed:!0,internalType:"address",name:"_from",type:"address"},{indexed:!0,internalType:"address",name:"_to",type:"address"},{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TransferSingle",type:"event"},{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"uint256",name:"_id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"_owners",type:"address[]"},{internalType:"uint256[]",name:"_ids",type:"uint256[]"}],name:"balanceOfBatch",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"isOperator",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256[]",name:"_ids",type:"uint256[]"},{internalType:"uint256[]",name:"_amounts",type:"uint256[]"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeBatchTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_id",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_operator",type:"address"},{internalType:"bool",name:"_approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"_interfaceID",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"pure",type:"function"}],H=function(){function e(){}return e.createInterface=function(){return new p.vU(B)},e.connect=function(e,t){return new y.CH(e,B,t)},e}();H.abi=B;var G=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}],q=function(){function e(){}return e.createInterface=function(){return new p.vU(G)},e.connect=function(e,t){return new y.CH(e,G,t)},e}();q.abi=G;var W=[{constant:!1,inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}],j=function(){function e(){}return e.createInterface=function(){return new p.vU(W)},e.connect=function(e,t){return new y.CH(e,W,t)},e}();j.abi=W;(Q={})[R.Polygon]=1.5,Q[R.PolygonMumbai]=1.5,Q[R.Kovan]=1.5;var Q,Z=[{type:"uint8",name:"direction"},{type:"address",name:"maker"},{type:"address",name:"taker"},{type:"uint256",name:"expiry"},{type:"uint256",name:"nonce"},{type:"address",name:"erc20Token"},{type:"uint256",name:"erc20TokenAmount"},{type:"Fee[]",name:"fees"},{type:"address",name:"erc721Token"},{type:"uint256",name:"erc721TokenId"},{type:"Property[]",name:"erc721TokenProperties"}],K=[{type:"uint8",name:"direction"},{type:"address",name:"maker"},{type:"address",name:"taker"},{type:"uint256",name:"expiry"},{type:"uint256",name:"nonce"},{type:"address",name:"erc20Token"},{type:"uint256",name:"erc20TokenAmount"},{type:"Fee[]",name:"fees"},{type:"address",name:"erc1155Token"},{type:"uint256",name:"erc1155TokenId"},{type:"Property[]",name:"erc1155TokenProperties"},{type:"uint128",name:"erc1155TokenAmount"}],Y=[{type:"address",name:"recipient"},{type:"uint256",name:"amount"},{type:"bytes",name:"feeData"}],X=[{type:"address",name:"propertyValidator"},{type:"bytes",name:"propertyData"}],$="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",z=function(){var e=m(x.mark((function e(t,n,a,r){var i,p,s,y,u,o,l,d,m,T;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.erc1155Token){e.next=8;break}return p={chainId:a,verifyingContract:r,name:"ZeroEx",version:"1.0.0"},(i={}).ERC1155Order=K,i.Fee=Y,i.Property=X,s=i,y=t,e.next=6,n._signTypedData(p,s,y);case 6:return u=e.sent,e.abrupt("return",u);case 8:if(!t.erc721Token){e.next=16;break}return l={chainId:a,verifyingContract:r,name:"ZeroEx",version:"1.0.0"},(o={}).ERC721Order=Z,o.Fee=Y,o.Property=X,d=o,m=t,e.next=14,n._signTypedData(l,d,m);case 14:return T=e.sent,e.abrupt("return",T);case 16:throw new Error("Unknown order type");case 18:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),J=function(){var e=m(x.mark((function e(t,n,a,r){var p,s,y,u,o,l,d,m,T,c,b,k,f;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.t0=a.type,e.next="ERC20"===e.t0?3:"ERC721"===e.t0?12:"ERC1155"===e.t0?22:27;break;case 3:if(a.tokenAddress.toLowerCase()!==$){e.next=5;break}return e.abrupt("return",{contractApproved:!0});case 5:return p=q.connect(a.tokenAddress,r),e.next=8,p.allowance(t,n);case 8:return s=e.sent,y=i.O$.from(ee.toString()).sub("100000000000000000"),u=s.gte(y),e.abrupt("return",{contractApproved:u});case 12:return o=j.connect(a.tokenAddress,r),l=o.isApprovedForAll(t,n),d=o.getApproved(a.tokenId),e.next=17,Promise.all([l,d]);case 17:return m=e.sent,T=m[0],c=m[1],b=c.toLowerCase()===n.toLowerCase(),e.abrupt("return",{contractApproved:null!=T&&T,tokenIdApproved:b});case 22:return k=H.connect(a.tokenAddress,r),e.next=25,k.isApprovedForAll(t,n);case 25:return f=e.sent,e.abrupt("return",{contractApproved:null!=f&&f});case 27:throw new w(a.type);case 28:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),ee=i.O$.from(2).pow(118),te=function(){var e=m(x.mark((function e(t,n,a,r,i){var p,s,y,u,o,l,d,m,c;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===r&&(r={}),s=null==(p=null==i?void 0:i.approve)||p,e.t0=n.type,e.next="ERC20"===e.t0?5:"ERC721"===e.t0?8:"ERC1155"===e.t0?14:19;break;case 5:return y=q.connect(n.tokenAddress,a),u=y.approve(t,s?ee.toString():0,T({},r)),e.abrupt("return",u);case 8:if(o=j.connect(n.tokenAddress,a),null==i||!i.approvalOnlyTokenIdIfErc721){e.next=12;break}return l=o.approve(t,n.tokenId,T({},r)),e.abrupt("return",l);case 12:return d=o.setApprovalForAll(t,s,T({},r)),e.abrupt("return",d);case 14:return m=H.connect(n.tokenAddress,a),e.next=17,m.setApprovalForAll(t,s,T({},r));case 17:return c=e.sent,e.abrupt("return",c);case 19:throw new w(n.type);case 20:case"end":return e.stop()}}),e)})));return function(t,n,a,r,i){return e.apply(this,arguments)}}();function ne(e){var t=(0,r.E1)(e);if(65!==t)throw new Error("Invalid signature length, expected 65, got "+t+'.\n"Raw signature: '+e+'"');var n=[0,1,27,28],a=parseInt(e.slice(-2),16);if(n.includes(a))return a=a>=27?a:a+27,{r:(0,r.p3)(e,0,32),s:(0,r.p3)(e,32,64),v:a};if(a=parseInt(e.slice(2,4),16),!n.includes(a))throw new Error('Cannot determine RPC signature layout from V value: "'+e+'"');return{v:a=a>=27?a:a+27,r:(0,r.p3)(e,1,33),s:(0,r.p3)(e,33,65)}}var ae,re,ie,pe=i.O$.from(2524604400),se=function(){var e="0x"+(0,u.Z)().replace(/-/g,"");return BigInt(e).toString()},ye=function(e){if("erc721Token"in e)return T({},e,{direction:parseInt(e.direction.toString()),expiry:e.expiry.toString(),nonce:e.nonce.toString(),erc20TokenAmount:e.erc20TokenAmount.toString(),fees:e.fees.map((function(e){return T({},e,{amount:e.amount.toString(),feeData:e.feeData.toString()})})),erc721TokenId:e.erc721TokenId.toString()});if("erc1155Token"in e)return T({},e,{direction:parseInt(e.direction.toString()),expiry:e.expiry.toString(),nonce:e.nonce.toString(),erc20TokenAmount:e.erc20TokenAmount.toString(),fees:e.fees.map((function(e){return T({},e,{amount:e.amount.toString(),feeData:e.feeData.toString()})})),erc1155TokenAmount:e.erc1155TokenAmount.toString(),erc1155TokenId:e.erc1155TokenId.toString()});throw console.log("unknown order format type (not erc721 and not erc1155",e),new Error("Unknown asset type")},ue=[{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{name:"unwrapNativeToken",type:"bool"}],name:"safeTransferFromErc721Data",outputs:[],stateMutability:"view",type:"function"}],oe=[{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order[]",name:"sellOrders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{name:"unwrapNativeToken",type:"bool"}],name:"safeTransferFromErc1155Data",outputs:[],stateMutability:"view",type:"function"}],le={1:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},3:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xc778417e063141139fce010982780140aa0cd5ab"},4:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xc778417e063141139fce010982780140aa0cd5ab"},10:{exchange:"0xdef1abe32c034e558cdd535791643c58a13acc10",wrappedNativeToken:"0x4200000000000000000000000000000000000006"},42:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xd0a1e359811322d97991e03f863a0c30c2cf029c"},56:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"},137:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"},250:{exchange:"0xdef189deaef76e379df891899eb5a00a94cbc250",wrappedNativeToken:"0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83"},1337:{exchange:"0x5315e44798395d4a952530d131249fe00f554565",wrappedNativeToken:"0x0b1ba0af832d7c05fd64161e0db78e85978e8082"},42161:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1"},42220:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0x471EcE3750Da237f93B8E339c536989b8978a438"},43114:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7"},80001:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0x9c3c9283d3e44854697cd22d3faa240cfb032889"}},de=function(e,t){return void 0===t&&(t=encodeURIComponent),Object.keys(e||{}).reduce((function(n,a){return[].concat(e[a]).forEach((function(e){n.push(t(a)+"="+t(e))})),n}),[]).join("&").replace(/\s/g,"+")},me="https://api.trader.xyz",Te=function(){var e=m(x.mark((function e(t,n,a,r,i){var p,s,y,u;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return void 0===a&&(a={}),void 0===i&&(i=l()),s={order:ye(t),chainId:n,metadata:a},y=null!=(p=null==r?void 0:r.rootUrl)?p:me,e.next=6,i(y+"/orderbook/order",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)}).then(function(){var e=m(x.mark((function e(t){return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.ok){e.next=4;break}return e.next=3,t.json();case 3:case 7:throw e.sent;case 4:if(!(t.status>=300)){e.next=8;break}return e.next=7,t.json();case 8:return e.abrupt("return",t.json());case 9:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()).catch((function(e){throw e}));case 6:return u=e.sent,e.abrupt("return",u);case 8:case"end":return e.stop()}}),e)})));return function(t,n,a,r,i){return e.apply(this,arguments)}}(),ce=function(){var e=m(x.mark((function e(t,n,a){var r,i,p,s;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return void 0===a&&(a=l()),i=de(null!=t?t:{}),p=null!=(r=null==n?void 0:n.rootUrl)?r:me,e.next=5,a(p+"/orderbook/orders?"+i).then(function(){var e=m(x.mark((function e(t){return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.ok){e.next=4;break}return e.next=3,t.json();case 3:case 7:throw e.sent;case 4:if(!(t.status>=300)){e.next=8;break}return e.next=7,t.json();case 8:return e.abrupt("return",t.json());case 9:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()).catch((function(e){throw e}));case 5:return s=e.sent,e.abrupt("return",s);case 7:case"end":return e.stop()}}),e)})));return function(t,n,a){return e.apply(this,arguments)}}();!function(e){e[e.SellNFT=0]="SellNFT",e[e.BuyNFT=1]="BuyNFT"}(re||(re={})),function(e){e[e.Invalid=0]="Invalid",e[e.Fillable=1]="Fillable",e[e.Unfillable=2]="Unfillable",e[e.Expired=3]="Expired"}(ie||(ie={}));var be,ke=((ae={})[re.BuyNFT]="buy",ae[re.SellNFT]="sell",ae),fe={propertyValidator:h,propertyData:[]};!function(e){e[e.Mainnet=1]="Mainnet",e[e.Ropsten=3]="Ropsten",e[e.Ganache=1337]="Ganache",e[e.Polygon=137]="Polygon",e[e.BSC=56]="BSC",e[e.Optimism=10]="Optimism",e[e.Fantom=250]="Fantom",e[e.Celo=42220]="Celo",e[e.Avalance=43114]="Avalance"}(be||(be={}));var Ae=[be.Ropsten,be.Polygon,be.Mainnet,be.Optimism],Ee=function(){function e(e,t,n,r){var y,u,o=this;this.loadApprovalStatus=function(e,t,n){var a;return J(t,null!=(a=null==n?void 0:n.exchangeContractAddress)?a:o.exchangeProxy.address,e,o.provider)},this.awaitTransactionHash=function(){var e=m(x.mark((function e(t){return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",o.provider.waitForTransaction(t));case 1:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.cancelOrder=function(e,t){if("ERC1155"===t)return o.exchangeProxy.cancelERC1155Order(e);if("ERC721"===t)return o.exchangeProxy.cancelERC721Order(e);throw console.log("unsupported order",t),new Error("unsupport order")},this.getOrderStatus=function(){var e=m(x.mark((function e(t){var n,a,r;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("erc1155Token"in t)){e.next=9;break}return e.next=3,o.exchangeProxy.getERC1155OrderInfo(t);case 3:return n=e.sent,a=n[1],e.abrupt("return",a);case 9:if(!("erc721Token"in t)){e.next=14;break}return e.next=12,o.exchangeProxy.getERC721OrderStatus(t);case 12:return r=e.sent,e.abrupt("return",r);case 14:throw console.log("unsupported order",t),new Error("unsupport order");case 16:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.approveTokenOrNftByAsset=function(e,t,n,a){var r,i=null!=(r=null==a?void 0:a.signer)?r:o.signer;if(!i)throw new Error("Signed not defined");return te(o.exchangeProxy.address,e,i,T({},n),a)},this.getWrappedTokenAddress=function(e){return function(e){var t,n=e.toString(10),a=le[n];return null!=(t=null==a?void 0:a.wrappedNativeToken)?t:null}(e)},this.buildCollectionBasedOrder=function(e,t,n){return o.buildNftAndErc20Order(T({},t,{tokenId:"0"}),e,"buy",n,{tokenProperties:[fe]})},this.buildNftAndErc20Order=function(e,t,n,a,r){var i;void 0===n&&(n="sell");var p=T({},{chainId:o.chainId,makerAddress:a},r),y="sell"===n?re.SellNFT:re.BuyNFT;if(y===re.BuyNFT&&t.tokenAddress.toLowerCase()===$)throw new Error("NFT Bids cannot use the native token (e.g. ETH). Please use the wrapped native token (e.g. WETH)");switch(e.type){case"ERC721":var u=function(e,t,n){var a,r,i,p,y,u,o,l,d=pe.toString();return n.expiry&&(d="number"===typeof n.expiry?n.expiry.toString():(0,s.Z)(n.expiry).toString()),{erc721Token:e.tokenAddress.toLowerCase(),erc721TokenId:e.tokenId,direction:parseInt(n.direction.toString()),erc20Token:t.tokenAddress.toLowerCase(),erc20TokenAmount:t.amount,maker:n.maker.toLowerCase(),erc721TokenProperties:null!=(a=null==(r=n.tokenProperties)?void 0:r.map((function(e){return{propertyData:e.propertyData,propertyValidator:e.propertyValidator}})))?a:[],fees:null!=(i=null==(p=n.fees)?void 0:p.map((function(e){var t,n;return{amount:e.amount.toString(),recipient:e.recipient.toLowerCase(),feeData:null!=(t=null==(n=e.feeData)?void 0:n.toString())?t:"0x"}})))?i:[],expiry:d,nonce:null!=(y=null==(u=n.nonce)?void 0:u.toString())?y:se(),taker:null!=(o=null==(l=n.taker)?void 0:l.toLowerCase())?o:h}}(e,t,T({direction:y,maker:a},p));return u;case"ERC1155":var l=function(e,t,n){var a,r,i,p,y,u,o,l,d,m=pe.toString();return n.expiry&&(m="number"===typeof n.expiry?n.expiry.toString():(0,s.Z)(n.expiry).toString()),{erc1155Token:e.tokenAddress.toLowerCase(),erc1155TokenId:e.tokenId,erc1155TokenAmount:null!=(a=e.amount)?a:"1",direction:parseInt(n.direction.toString(10)),erc20Token:t.tokenAddress.toLowerCase(),erc20TokenAmount:t.amount,maker:n.maker.toLowerCase(),erc1155TokenProperties:null!=(r=null==(i=n.tokenProperties)?void 0:i.map((function(e){return{propertyData:e.propertyData.toString(),propertyValidator:e.propertyValidator}})))?r:[],fees:null!=(p=null==(y=n.fees)?void 0:y.map((function(e){var t,n;return{amount:e.amount.toString(),recipient:e.recipient.toLowerCase(),feeData:null!=(t=null==(n=e.feeData)?void 0:n.toString())?t:"0x"}})))?p:[],expiry:m,nonce:null!=(u=null==(o=n.nonce)?void 0:o.toString())?u:se(),taker:null!=(l=null==(d=n.taker)?void 0:d.toLowerCase())?l:h}}(e,t,T({direction:y,maker:a},p));return l;default:throw new w(null!=(i=e.type)?i:"Unknown")}},this.signOrder=function(){var e=m(x.mark((function e(t){var n,a,r;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o.signer){e.next=2;break}throw new Error("Signed not defined");case 2:return e.next=4,z(t,o.signer,o.chainId,o.exchangeProxy.address);case 4:return n=e.sent,a=ne(n),r=T({},t,{signature:{signatureType:2,r:a.r,s:a.s,v:a.v}}),e.abrupt("return",r);case 8:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.fillBuyNftOrderWithoutApproval=function(){var e=m(x.mark((function e(t,n,a,r){var i,s,y,u,l,d,m,T,c,b,k,f,A,E,O,g;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o.signer){e.next=2;break}throw new Error("Signer undefined. Signer must be provided to fill order");case 2:if(t.direction===re.BuyNFT){e.next=4;break}throw new Error("Only filling Buy NFT orders (direction=1) is valid for skipping approvals");case 4:return e.next=6,o.signer.getAddress();case 6:if(s=e.sent,y=null!=(i=null==a?void 0:a.fillOrderWithNativeTokenInsteadOfWrappedToken)&&i,!("erc721Token"in t)){e.next=17;break}return l=j.connect(t.erc721Token,o.signer),d=new p.vU(ue),m=d.getFunction("safeTransferFromErc721Data"),T=d._encodeParams(m.inputs,[t,t.signature,y]),e.next=15,l["safeTransferFrom(address,address,uint256,bytes)"](s,o.exchangeProxy.address,null!=(u=null==a?void 0:a.tokenIdToSellForCollectionOrder)?u:n,T,null!=r?r:{});case 15:return c=e.sent,e.abrupt("return",c);case 17:if(!("erc1155Token"in t)){e.next=26;break}return f=H.connect(t.erc1155Token,o.signer),A=new p.vU(oe),E=A.getFunction("safeTransferFromErc1155Data"),O=A._encodeParams(E.inputs,[t,t.signature,y]),e.next=24,f.safeTransferFrom(s,o.exchangeProxy.address,null!=(b=null==a?void 0:a.tokenIdToSellForCollectionOrder)?b:n,null!=(k=t.erc1155TokenAmount)?k:"1",O,null!=r?r:{});case 24:return g=e.sent,e.abrupt("return",g);case 26:throw new Error("unknown order type");case 27:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),this.fillSignedCollectionOrder=function(){var e=m(x.mark((function e(t,n,a,r){return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",o.fillSignedOrder(t,T({tokenIdToSellForCollectionOrder:n},a),T({},r)));case 1:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),this.isErc20NativeToken=function(e){return e.erc20Token.toLowerCase()===$},this.fillSignedOrder=function(){var e=m(x.mark((function e(t,n,a){var r,i,p,s,y,u,l,d,m,c;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t.direction===re.SellNFT,i=o.isErc20NativeToken(t),p=i&&r,s=o.getErc20TotalIncludingFees(t),!("erc1155Token"in t)){e.next=16;break}if(t.direction!==re.SellNFT){e.next=9;break}return e.abrupt("return",o.exchangeProxy.buyERC1155(t,t.signature,t.erc1155TokenAmount,"0x",T({value:p?s:void 0},a)));case 9:if(l=null!=(y=null==n?void 0:n.fillOrderWithNativeTokenInsteadOfWrappedToken)&&y,!(t.erc1155TokenProperties.length>0)){e.next=13;break}if(void 0!==(null==n?void 0:n.tokenIdToSellForCollectionOrder)){e.next=13;break}throw new Error("Collection order missing NFT tokenId to fill with. Specify in fillOrderOverrides.tokenIdToSellForCollectionOrder");case 13:return e.abrupt("return",o.exchangeProxy.sellERC1155(t,t.signature,null!=(u=null==n?void 0:n.tokenIdToSellForCollectionOrder)?u:t.erc1155TokenId,t.erc1155TokenAmount,l,"0x",T({},a)));case 14:e.next=26;break;case 16:if(!("erc721Token"in t)){e.next=26;break}if(t.direction!==re.SellNFT){e.next=21;break}return e.abrupt("return",o.exchangeProxy.buyERC721(t,t.signature,"0x",T({value:p?s:void 0},a)));case 21:if(c=null!=(d=null==n?void 0:n.fillOrderWithNativeTokenInsteadOfWrappedToken)&&d,!(t.erc721TokenProperties.length>0)){e.next=25;break}if(void 0!==(null==n?void 0:n.tokenIdToSellForCollectionOrder)){e.next=25;break}throw new Error("Collection order missing NFT tokenId to fill with. Specify in fillOrderOverrides.tokenIdToSellForCollectionOrder");case 25:return e.abrupt("return",o.exchangeProxy.sellERC721(t,t.signature,null!=(m=null==n?void 0:n.tokenIdToSellForCollectionOrder)?m:t.erc721TokenId,c,"0x",T({},a)));case 26:throw console.log("unsupported order",t),new Error("unsupport signedOrder type");case 28:case"end":return e.stop()}}),e)})));return function(t,n,a){return e.apply(this,arguments)}}(),this.postOrder=function(e,t,n){Ae.includes(parseInt(t));return Te(e,t,n,{rootUrl:o.orderbookRootUrl})},this.getOrders=function(){var e=m(x.mark((function e(t){var n;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,ce(t,{rootUrl:o.orderbookRootUrl});case 2:return n=e.sent,e.abrupt("return",n);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.matchOrders=function(){var e=m(x.mark((function e(t,n,a){var r;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("erc721Token"in t)||!("erc721Token"in n)){e.next=5;break}return e.next=3,o.exchangeProxy.matchERC721Orders(t,n,t.signature,n.signature,null!=a?a:{});case 3:return r=e.sent,e.abrupt("return",r);case 5:throw new Error("Only ERC721 Orders are currently supported for matching. Please ensure both the sellOrder and buyOrder are ERC721 orders");case 6:case"end":return e.stop()}}),e)})));return function(t,n,a){return e.apply(this,arguments)}}(),this.getMakerAsset=function(e){if(e.direction.toString(10)===re.BuyNFT.toString())return{tokenAddress:e.erc20Token,amount:e.erc20TokenAmount.toString(10),type:"ERC20"};if(e.direction.toString(10)===re.SellNFT.toString()){if("erc721Token"in e)return{tokenAddress:e.erc721Token,tokenId:e.erc721TokenId.toString(10),type:"ERC721"};if("erc1155Token"in e)return{tokenAddress:e.erc1155Token,tokenId:e.erc1155TokenId.toString(10),amount:e.erc1155TokenAmount.toString(10),type:"ERC1155"}}throw new Error("Unknown order direction "+e.direction)},this.getTakerAsset=function(e){if(e.direction.toString(10)===re.BuyNFT.toString()){if("erc721Token"in e)return{tokenAddress:e.erc721Token,tokenId:e.erc721TokenId.toString(10),type:"ERC721"};if("erc1155Token"in e)return{tokenAddress:e.erc1155Token,tokenId:e.erc1155TokenId.toString(10),amount:e.erc1155TokenAmount.toString(10),type:"ERC1155"}}else if(e.direction.toString(10)===re.SellNFT.toString())return{tokenAddress:e.erc20Token,amount:e.erc20TokenAmount.toString(10),type:"ERC20"};throw new Error("Unknown order direction "+e.direction)},this.validateSignature=function(){var e=m(x.mark((function e(t){return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("erc721Token"in t)){e.next=6;break}return e.next=3,o.exchangeProxy.validateERC721OrderSignature(t,t.signature);case 3:case 9:return e.abrupt("return",!0);case 6:if(!("erc1155Token"in t)){e.next=12;break}return e.next=9,o.exchangeProxy.validateERC1155OrderSignature(t,t.signature);case 12:throw new Error("Unknown order type (not ERC721 or ERC1155)");case 13:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.fetchBalanceForAsset=function(){var e=m(x.mark((function e(t,n,a){var r,p,s;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===a&&(a=o.provider),e.t0=t.type,e.next="ERC20"===e.t0?4:"ERC721"===e.t0?6:"ERC1155"===e.t0?13:15;break;case 4:return r=q.connect(t.tokenAddress,a),e.abrupt("return",r.balanceOf(n));case 6:return p=j.connect(t.tokenAddress,a),e.next=9,p.ownerOf(t.tokenId);case 9:if(e.sent.toLowerCase()!==n.toLowerCase()){e.next=12;break}return e.abrupt("return",i.O$.from(1));case 12:return e.abrupt("return",i.O$.from(0));case 13:return s=H.connect(t.tokenAddress,a),e.abrupt("return",s.balanceOf(n,t.tokenId));case 15:throw new Error("Asset type unknown "+t.type);case 16:case"end":return e.stop()}}),e)})));return function(t,n,a){return e.apply(this,arguments)}}(),this.checkOrderCanBeFilledTakerSide=function(){var e=m(x.mark((function e(t,n){var a,r,i,p,s,y,u;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=o.getTakerAsset(t),e.next=3,o.loadApprovalStatus(r,n);case 3:return i=e.sent,e.next=6,o.fetchBalanceForAsset(o.getTakerAsset(t),n);case 6:return p=e.sent,s=p.gte(null!=(a=r.amount)?a:1),y=i.contractApproved||i.tokenIdApproved||!1,u=s&&y,e.abrupt("return",{approvalStatus:i,balance:p.toString(),isApproved:y,hasBalance:s,canOrderBeFilled:u});case 11:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),this.checkOrderCanBeFilledMakerSide=function(){var e=m(x.mark((function e(t){var n,a,r,i,p,s,y,u;return x.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.maker,r=o.getMakerAsset(t),e.next=4,o.loadApprovalStatus(r,a);case 4:return i=e.sent,e.next=7,o.fetchBalanceForAsset(o.getMakerAsset(t),a);case 7:return p=e.sent,s=p.gte(null!=(n=r.amount)?n:1),y=i.tokenIdApproved||i.contractApproved||!1,u=s&&y,e.abrupt("return",{approvalStatus:i,balance:p.toString(),isApproved:y,hasBalance:s,canOrderBeFilled:u});case 12:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.getTotalFees=function(e){var t=e.fees,n=I;return t.forEach((function(e){n=n.add(i.O$.from(e.amount))})),n},this.getErc20TotalIncludingFees=function(e){var t=o.getTotalFees(e);return i.O$.from(e.erc20TokenAmount).add(t)},this.provider=e,this.signer=t,this.chainId=null!=n?n:this.provider._network.chainId;var l=le[this.chainId],d=null!=(y=null==r?void 0:r.zeroExExchangeProxyContractAddress)?y:null==l?void 0:l.exchange;d||(0,a.Z)(!1),this.exchangeProxyContractAddress=d,this.orderbookRootUrl=null!=(u=null==r?void 0:r.orderbookRootUrl)?u:me,this.exchangeProxy=U.connect(d,null!=t?t:e)}return e.prototype.buildOrder=function(e,t,n,a){if(("ERC1155"===t.type||"ERC721"===t.type)&&("ERC1155"===e.type||"ERC721"===e.type))throw new Error("0x v4 only supports ERC721/ERC1155 <> ERC20. Currently 0x v4 does not support NFT<>NFT swaps, please use 0x v3 SDK for that.");if("ERC20"===e.type&&"ERC20"===t.type)throw new Error("0x v4 only supports ERC721/ERC1155 <> ERC20. Currently 0x v4 does not support NFT<>NFT swaps, please use 0x v3 SDK for that.");var r=re.SellNFT;"ERC20"===t.type&&(r=re.SellNFT),"ERC20"===e.type&&(r=re.BuyNFT);var i=r===re.BuyNFT?t:e,p=r===re.BuyNFT?e:t;return this.buildNftAndErc20Order(i,p,ke[r],n,a)},e}()}}]);